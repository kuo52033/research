query  = 'select gameid , fight.accountid , teamid , lane , winrate from fight join champion on champion.id = fight.champion left join eachchamp_winrate as e on e.accountid = fight.accountid and e.champ_name = champion.champ_name where gameid in( SELECT TOP 1 gameid FROM game ORDER BY NEWID())'
random_one = pd.read_sql(query, conn)
random_one["winrate"] = random_one["winrate"].fillna(40.00)
random_one['teamid'] = (random_one['teamid'] =='100').astype('int')

lastpick = data.query("teamid == 0").sample(n = 1)
lastpick_id = lastpick["accountid"].values[0]
lastpick_lane = lastpick['lane'].values[0]
team = 0

other = random_one.query("teamid ==0 & accountid != @lastpick_id").reset_index(drop = True)

last_champ_ = []
last_winrate_ = []
cursor = conn.cursor()
cursor.execute('select e.champ_name , winrate from eachchamp_winrate as e join champ_lane as c on c.champ_name = e.champ_name where accountid  = ? and lane = ?' , lastpick_id , lastpick_lane)
rows = cursor.fetchall()
for i in rows:
    last_champ_.append(i.champ_name)
    last_winrate_.append(i.winrate)
    
dic = {"TOP":[] , "MIDDLE":[], "ADC":[] , "SUPPORT":[] , "JUNGLE":[] , "TEAM":[] }
tail_test = pd.DataFrame(dic)
tail_test2 = pd.DataFrame(dic)

for i in lane:
    rate = other.query("lane == @i")
    tail_test[i] = rate.reset_index(drop = True)["winrate"]
tail_test2 = pd.concat([tail_test]*len(last_winrate_)).reset_index(drop = True)
tail_test2['TEAM'] = tail_test2['TEAM'].fillna(team)

for k in range(len(last_winrate_)):
    tail_test2.loc[k: , lastpick_lane] =last_winrate_[k]

pro = rfc.predict_proba(tail_test2)

best_win_rate = np.max(pro , axis = 0)[0]
i = np.where(pro == best_win_rate)
for k in range(len(i[0])):
    if i[1][k] == team:
        best_champ = last_champ_[i[0][k]]
        best_champ_win_rate = last_winrate_[i[0][k]]
        print(best_champ , best_champ_win_rate , best_win_rate*100 )